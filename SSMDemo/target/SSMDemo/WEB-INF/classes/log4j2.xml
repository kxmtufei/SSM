<?xml version="1.0" encoding="UTF-8"?>

<!--
    Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。 
	monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数。
-->
<configuration status="OFF">
	<!--先定义所有的appender-->
    <appenders>
		<!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
			<!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
		
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
		<!--<File name="File" fileName="${sys:catalina.home}/logs/ebitg-manager.log" append="false">
        <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
		</File>-->
	
		<!-- 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <!--<RollingFile name="RollingFile" fileName="${sys:catalina.home}/logs/ebitg-manager.log"
                     filePattern="log/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.zip">
            <PatternLayout pattern="%d{yyyy-MM-dd 'at' HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
            <SizeBasedTriggeringPolicy size="5MB"/>
        </RollingFile>-->
        
		<!--<RollingFile name="RollingFile" fileName="${sys:catalina.home}/logs/longKing.log"
                     filePattern="${sys:catalina.home}/logs/logs_longKing_%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="%d{yyyy-MM-dd 'at' HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1" />
            </Policies>
            &lt;!&ndash; <SizeBasedTriggeringPolicy size="5MB"/>&ndash;&gt;
            <DefaultRolloverStrategy>
                <Delete basePath="${sys:catalina.home}/logs/" maxDepth="1">
                    <IfFileName glob="logs_longKing_*.log" />
                    <IfLastModified age="7d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>-->
    </appenders>
	
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
		<!--建立一个默认的root的logger
        <logger name="vc" level="debug" additivity="true">
            <appender-ref ref="Console"/>
        </logger>
        -->
        <!-- 将druid连接池的sql语句打印到日志文件中 -->
        <logger name="druid.sql.Statement" level="debug" additivity="false">
            <appender-ref ref="Console"/>
            <!--<appender-ref ref="RollingFileName"/>-->
        </logger>

        <root level="debug">
            <appender-ref ref="Console"/>
            <!--<appender-ref ref="File"/>-->
        </root>
    </loggers>
</configuration>